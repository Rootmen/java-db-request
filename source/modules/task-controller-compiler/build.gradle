plugins {
    id 'java'
    id 'maven-publish'
    id 'io.quarkus.extension'
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-arc'
    implementation project(path: ':source:modules:task-controller')
}

group "${applicationGroup}"
version "${applicationVersion}"

tasks.configureEach { task ->
    if (task.name == "quarkusDev") {
        task.enabled = (target == project.name)
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

test {
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.encoding = 'UTF-8'
}

tasks.named('compileTestJava') {
    dependsOn 'jandex'
}

tasks.named('test') {
    dependsOn 'jandex'
}

publishing {
    repositories {
        maven {
            name = "myDomainRepository"
            allowInsecureProtocol = true
            url = "http://gitlabrunner.iedt.com.rzd:8080/releases"
            credentials(PasswordCredentials)
            authentication {
                basic(BasicAuthentication)
            }
        }
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/rootmen/java-db-request")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
    publications {
        maven(MavenPublication) {
            groupId = "${applicationGroup}"
            artifactId = project.name
            version = "${applicationVersion}"
            from components.java
        }
    }
}

tasks.withType(GenerateModuleMetadata).configureEach {
    suppressedValidationErrors.add('enforced-platform')
}