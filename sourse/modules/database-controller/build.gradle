plugins {
    id 'java'
    id 'io.quarkus' version "$quarkusPlatformVersion"
    id 'org.kordamp.gradle.jandex' version '1.1.0'
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-arc'
    implementation 'io.quarkus:quarkus-resteasy-reactive'
    implementation 'io.quarkus:quarkus-hibernate-validator'
    implementation 'io.quarkus:quarkus-resteasy-reactive-jackson'
    implementation 'io.quarkus:quarkus-reactive-pg-client'
    implementation 'io.smallrye:jandex'
    implementation 'io.quarkus:quarkus-smallrye-openapi'

    implementation 'org.reflections:reflections:0.10.2'
    implementation project(path: ':sourse:modules:store')
    implementation project(path: ':sourse:modules:structures')
    implementation project(path: ':sourse:modules:xml-parser')

    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:rest-assured'
}

jar {
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

group "${applicationGroup}"
version "${applicationVersion}"

tasks.configureEach { task ->
    if (task.name == "quarkusDev") {
        task.enabled = (target == project.name)
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

test {
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.encoding = 'UTF-8'
}

tasks.named('compileTestJava') {
    dependsOn 'jandex'
}

tasks.named('test') {
    dependsOn 'jandex'
}

tasks.named('quarkusDependenciesBuild') {
    dependsOn 'jandex'
}
